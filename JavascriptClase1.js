   
    alert("Este es el contenido teorico de Javascript clase 1 üòé");
    alert("¬øQu√© √≠tem quer√©s estudiar ü§ì?");
    let continuar = true;

    while (continuar) {
        let mensaje = Number(prompt("1.Conceptos basicos de Javascript\n2.Integraci√≥n con HTML y CSS\n3.Revisi√≥n de Git y GitHub\n4.Cual es la actividad practica de la semana?"));

        switch (mensaje) {
            case 1:
                alert("1. Variables y Tipos de Datos.\nJavaScript utiliza variables para almacenar datos que pueden variar durante la ejecuci√≥n del programa. Las variables se declaran con las palabras clave let o const. Estas variables pueden ser declaradas (se les asigna solamente un nombre) o declarada e inicializada(se le declara un nombre y un valor especifico)");
                alert("Los tipos de datos principales en JavaScript son:\nString: para textos.\nNumber: para n√∫meros.\nBoolean: para valores verdadero (true) o falso (false)\nNull: representa un valor nulo.\nUndefined: indica que una variable no tiene asignado un valor.")
                alert("2. Operaciones B√°sicas:\nJavaScript permite realizar operaciones aritm√©ticas b√°sicas como suma (+), resta (-), multiplicaci√≥n (*) y divisi√≥n (/).")
                alert("3. Estructuras de Control:\nLas estructuras de control permiten dirigir el flujo de ejecuci√≥n mediante decisiones o repeticiones.")
                alert("a. Condicionales\nif: Ejecuta un bloque de c√≥digo si una condici√≥n es verdadera.\nelse: Se ejecuta si la condici√≥n del if no se cumple.\nb. Bucles\nfor: Ejecuta un bloque de c√≥digo un n√∫mero determinado de veces.\nwhile: Ejecuta un bloque de c√≥digo mientras la condici√≥n sea verdadera.")
                alert("Conclusi√≥n:\nComprender estas bases de JavaScript es esencial para manipular datos y controlar el flujo de operaciones en cualquier aplicaci√≥n web. A medida que avancemos, exploraremos m√°s caracter√≠sticas avanzadas del lenguaje.")

                break;
            case 2:
                alert("Vinculaci√≥n con HTML\nCuando desarrollamos sitios web, es com√∫n separar el contenido HTML del c√≥digo JavaScript para mantener organizado el c√≥digo y facilitar su mantenimiento. Esto se logra mediante la etiqueta <script> en HTML, que permite incluir archivos JavaScript externos o incorporar c√≥digo directamente dentro de los documentos HTML.");
                alert("Uso B√°sico de la Etiqueta <script>\nPara vincular un archivo JavaScript externo a un documento HTML, se utiliza la etiqueta <script> con el atributo src, que contiene la ruta al archivo JavaScript. Esta etiqueta se puede colocar dentro del <head> o antes del cierre del <body>, dependiendo de cu√°ndo se desea que se cargue el script.");
                alert("Atributos async y defer\nPara controlar c√≥mo y cu√°ndo se cargan los scripts, podemos usar los atributos async y defer, que influyen en el comportamiento de carga y ejecuci√≥n de los scripts sin bloquear el renderizado del resto de la p√°gina.");
                alert("async\nEl atributo async permite que el script se cargue de manera asincr√≥nica con respecto al resto de la p√°gina. Esto significa que el navegador no necesita esperar a que el script se cargue y ejecute para continuar procesando el resto del contenido HTML. El script se ejecutar√° tan pronto como est√© disponible, lo que puede mejorar la velocidad de carga de la p√°gina.")
                alert("defer\nEl atributo defer, por otro lado, tambi√©n permite la carga asincr√≥nica del script, pero retrasa la ejecuci√≥n del mismo hasta que todo el documento HTML ha sido completamente cargado y analizado. Esto es √∫til para scripts que necesitan interactuar con elementos del DOM o cuyo orden de ejecuci√≥n es importante.");
                alert("Consideraciones\nPosicionamiento:\nTradicionalmente, los scripts se colocan al final del cuerpo del documento (<body>) para no bloquear la carga de la p√°gina. Con async y defer, tenemos mayor flexibilidad para colocar las etiquetas <script> en la secci√≥n <head>, ya que su comportamiento asincr√≥nico evita el bloqueo del renderizado.");
                alert("Compatibilidad:\nTodos los navegadores modernos soportan async y defer. Sin embargo, es importante considerar las implicaciones de cada uno en el comportamiento de carga y ejecuci√≥n del script para asegurar que la funcionalidad del sitio no se vea afectada negativamente.");
                alert("Conclusi√≥n\nUtilizar adecuadamente async y defer puede mejorar significativamente la experiencia del usuario al reducir los tiempos de carga percibidos y asegurar que el contenido cr√≠tico se muestre lo m√°s r√°pido posible. Al integrar JavaScript en nuestros documentos HTML, estos atributos son herramientas valiosas para optimizar el rendimiento y la interactividad de las p√°ginas web.");
                break;
            case 3:
                alert("Uso de Git\n¬øQu√© es Git?\nGit es un sistema de control de versiones distribuido y de c√≥digo abierto que permite a los desarrolladores gestionar de manera eficiente y segura las versiones de sus proyectos de software. Es fundamental para coordinar el trabajo entre m√∫ltiples colaboradores, rastrear cambios en el c√≥digo y revertir a versiones anteriores si es necesario.");
                alert("Instalaci√≥n de Git\nPara comenzar a usar Git, necesitas instalarlo en tu sistema. Aqu√≠ te mostramos c√≥mo hacerlo en diferentes sistemas operativos:\nWindows: Descarga el instalador de Git desde git-scm.com, y sigue las instrucciones de instalaci√≥n.\nMac: Puedes instalar Git usando Homebrew con el comando brew install git.\nLinux: Utiliza el gestor de paquetes de tu distribuci√≥n, por ejemplo, en Ubuntu ser√≠a sudo apt-get install git.");
                alert("Configuraci√≥n Inicial de Git\nUna vez instalado, configura tu identidad en Git. Esto es crucial para que cada commit que realices en tus proyectos est√© adecuadamente firmado con tu nombre y correo electr√≥nico.\ngit config --global user.name 'Tu Nombre'\ngit config --global user.email 'tu.email@example.com'");
                alert("Creando tu Primer Repositorio:\nPara empezar un nuevo proyecto con Git, primero debes crear un repositorio local. Aqu√≠ te mostramos c√≥mo:");
                alert("mkdir MiProyecto\ncd MiProyecto\ngit init\nEste conjunto de comandos crea una nueva carpeta llamada MiProyecto, navega dentro de ella, y ejecuta git init para inicializar un nuevo repositorio de Git.")
                alert("Utilidad de Git en el Desarrollo\nGit es esencial por varias razones:\nControl de Cambios: Permite ver qui√©n hizo qu√© cambios y cu√°ndo, lo que es crucial en proyectos colaborativos.\nRamas (Branches): Facilita la experimentaci√≥n y el desarrollo paralelo sin afectar la base de c√≥digo principal, mejorando la gesti√≥n de nuevas caracter√≠sticas y pruebas.\nRevertir Cambios: Puedes volver f√°cilmente a una versi√≥n anterior si algo sale mal en la versi√≥n actual de tu proyecto.");
                alert("Conclusi√≥n\nAprender y utilizar Git es fundamental para cualquier desarrollador que trabaje en proyectos modernos de desarrollo de software. Facilita la colaboraci√≥n y la gesti√≥n de c√≥digo en equipos grandes y peque√±os, asegurando que los cambios est√©n bien documentados y sean f√°ciles de modificar.")
                break;
                
            case 4:
                alert("Actividad Practica\nVariables y tipos de datos\nConsigna\nCrea variables con los siguientes tipos de datos (Numbre, string y boolean)\nMuestra los valores de las variables en consola\nTips\nC√≥digo fuente en archivo JavaScript, con formato .js, vinculando a este con el archivo HTML mediante el tag .\nUtiliza la consola para ayudarte a encontrar los errores o fallas que provocan que el c√≥digo no funcione.");
                break;
           
            default:
                alert("Opci√≥n no v√°lida üòÖ. prob√° un n√∫mero del 1 al 4.");
                break;
        }

        continuar = confirm("¬øQueres estudiar otro √≠tem? üë®‚Äçüè´");
    }

    alert("No te desanimesüòÅ! Fuerza üí™");
